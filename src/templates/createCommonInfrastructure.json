{
    "isDeleted": false,
    "variables": {
    },
    "variableGroups": [],
    "environments": [
      {
        "id": 1,
        "name": "Dev",
        "rank": 1,
        "owner": {
          "id": "${owner_id}"
        },
        "variables": {},
        "variableGroups": [],
        "preDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 1
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": "beforeGates"
          }
        },
        "deployStep": {
          "id": 2
        },"postDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 3
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": "afterSuccessfulGates"
          }
        },
        "deployPhases": [
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": "none"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": "${agentQueueId}",
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 1,
            "phaseType": "agentBasedDeployment",
            "name": "Run on agent",
            "refName": null,
            "workflowTasks": [
                  {
                    "environment": {},
                    "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "version": "1.*",
                    "name": "Azure CLI: create or update web app service container",
                    "refName": "",
                    "enabled": true,
                    "alwaysRun": false,
                    "continueOnError": false,
                    "timeoutInMinutes": 0,
                    "definitionType": "task",
                    "overrideInputs": {},
                    "condition": "succeeded()",
                    "inputs": {
                      "connectedServiceNameARM": "${serviceConnectionId}",
                      "scriptLocation": "scriptPath",
                      "scriptPath": "$(System.DefaultWorkingDirectory)/_buildit_azurerig-nodejs/src/scripts/createCommonResourceGroup.sh",
                      "inlineScript": "",
                      "args": "${resourceGroupName}Dev ${appName}Dev ${registryAddress} ${imageName}:unstable-latest ${location}",
                      "addSpnToEnvironment": "false",
                      "useGlobalConfig": "false",
                      "cwd": "",
                      "failOnStandardError": "false"
                    }
                  }
            ]
          }
        ],
        "environmentOptions": {
          "emailNotificationType": "OnlyOnFailure",
          "emailRecipients": "release.environment.owner;release.creator",
          "skipArtifactsDownload": false,
          "timeoutInMinutes": 0,
          "enableAccessToken": false,
          "publishDeploymentStatus": true,
          "badgeEnabled": false,
          "autoLinkWorkItems": false,
          "pullRequestDeploymentEnabled": false
        },
        "demands": [],
        "conditions": [
          {
            "name": "ReleaseStarted",
            "conditionType": "event",
            "value": ""
          }
        ],
        "executionPolicy": {
          "concurrencyCount": 1,
          "queueDepthCount": 0
        },
        "schedules": [],
        "retentionPolicy": {
          "daysToKeep": 30,
          "releasesToKeep": 3,
          "retainBuild": true
        },
        "processParameters": {},
        "properties": {},
        "preDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "postDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "environmentTriggers": []
      },
      {
        "id": 2,
        "name": "Staging",
        "rank": 2,
        "owner": {
          "id": "${owner_id}"
        },
        "variables": {},
        "variableGroups": [],
        "preDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 1
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": "beforeGates"
          }
        },
        "deployStep": {
          "id": 2
        },"postDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 3
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": "afterSuccessfulGates"
          }
        },
        "deployPhases": [
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": "none"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": "${agentQueueId}",
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 1,
            "phaseType": "agentBasedDeployment",
            "name": "Run on agent",
            "refName": null,
            "workflowTasks": [
                  {
                    "environment": {},
                    "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "version": "1.*",
                    "name": "Azure CLI: create or update web app service container",
                    "refName": "",
                    "enabled": true,
                    "alwaysRun": false,
                    "continueOnError": false,
                    "timeoutInMinutes": 0,
                    "definitionType": "task",
                    "overrideInputs": {},
                    "condition": "succeeded()",
                    "inputs": {
                      "connectedServiceNameARM": "${serviceConnectionId}",
                      "scriptLocation": "scriptPath",
                      "scriptPath": "$(System.DefaultWorkingDirectory)/_buildit_azurerig-nodejs/src/scripts/createResourceGroup.sh",
                      "inlineScript": "",
                      "args": "${resourceGroupName}Stage ${appName}Stage ${registryAddress} ${imageName}:stable-latest ${location}",
                      "addSpnToEnvironment": "false",
                      "useGlobalConfig": "false",
                      "cwd": "",
                      "failOnStandardError": "false"
                    }
                  }
            ]
          }
        ],
        "environmentOptions": {
          "emailNotificationType": "OnlyOnFailure",
          "emailRecipients": "release.environment.owner;release.creator",
          "skipArtifactsDownload": false,
          "timeoutInMinutes": 0,
          "enableAccessToken": false,
          "publishDeploymentStatus": true,
          "badgeEnabled": false,
          "autoLinkWorkItems": false,
          "pullRequestDeploymentEnabled": false
        },
        "demands": [],
        "conditions": [
            {
                "name": "Dev",
                "conditionType": 2,
                "value": "4"
              }
        ],
        "executionPolicy": {
          "concurrencyCount": 1,
          "queueDepthCount": 0
        },
        "schedules": [],
        "retentionPolicy": {
          "daysToKeep": 30,
          "releasesToKeep": 3,
          "retainBuild": true
        },
        "processParameters": {},
        "properties": {},
        "preDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "postDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "environmentTriggers": []
      },
      {
        "id": 3,
        "name": "Production",
        "rank": 3,
        "owner": {
          "id": "${owner_id}"
        },
        "variables": {},
        "variableGroups": [],
        "preDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 1
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": "beforeGates"
          }
        },
        "deployStep": {
          "id": 2
        },"postDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 3
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": "afterSuccessfulGates"
          }
        },
        "deployPhases": [
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": "none"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": "${agentQueueId}",
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 1,
            "phaseType": "agentBasedDeployment",
            "name": "Run on agent",
            "refName": null,
            "workflowTasks": [
                  {
                    "environment": {},
                    "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "version": "1.*",
                    "name": "Azure CLI: create or update web app service container",
                    "refName": "",
                    "enabled": true,
                    "alwaysRun": false,
                    "continueOnError": false,
                    "timeoutInMinutes": 0,
                    "definitionType": "task",
                    "overrideInputs": {},
                    "condition": "succeeded()",
                    "inputs": {
                      "connectedServiceNameARM": "${serviceConnectionId}",
                      "scriptLocation": "scriptPath",
                      "scriptPath": "$(System.DefaultWorkingDirectory)/_buildit_azurerig-nodejs/src/scripts/createResourceGroup.sh",
                      "inlineScript": "",
                      "args": "${resourceGroupName}Prod ${appName}Prod ${registryAddress} ${imageName}:stable-latest ${location}",
                      "addSpnToEnvironment": "false",
                      "useGlobalConfig": "false",
                      "cwd": "",
                      "failOnStandardError": "false"
                    }
                  }
            ]
          }
        ],
        "environmentOptions": {
          "emailNotificationType": "OnlyOnFailure",
          "emailRecipients": "release.environment.owner;release.creator",
          "skipArtifactsDownload": false,
          "timeoutInMinutes": 0,
          "enableAccessToken": false,
          "publishDeploymentStatus": true,
          "badgeEnabled": false,
          "autoLinkWorkItems": false,
          "pullRequestDeploymentEnabled": false
        },
        "demands": [],
        "conditions": [
            {
                "name": "Staging",
                "conditionType": 2,
                "value": "4"
              }
        ],
        "executionPolicy": {
          "concurrencyCount": 1,
          "queueDepthCount": 0
        },
        "schedules": [],
        "retentionPolicy": {
          "daysToKeep": 30,
          "releasesToKeep": 3,
          "retainBuild": true
        },
        "processParameters": {},
        "properties": {},
        "preDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "postDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "environmentTriggers": []
      }
    ],
    "artifacts": [
      {
        "sourceId": "${gitServiceConnectionId}:buildit/azurerig-nodejs",
        "type": "GitHub",
        "alias": "_buildit_azurerig-nodejs",
        "definitionReference": {
          "branch": {
            "id": "master",
            "name": "master"
          },
          "checkoutNestedSubmodules": {
            "id": "True",
            "name": "Any nested submodules within"
          },
          "checkoutSubmodules": {
            "id": "",
            "name": ""
          },
          "connection": {
            "id": "${gitServiceConnectionId}"
          },
          "defaultVersionSpecific": {
            "id": "",
            "name": ""
          },
          "defaultVersionType": {
            "id": "latestFromBranchType",
            "name": "Latest from the default branch"
          },
          "definition": {
            "id": "buildit/azurerig-nodejs",
            "name": "buildit/azurerig-nodejs"
          },
          "fetchDepth": {
            "id": "",
            "name": ""
          },
          "gitLfsSupport": {
            "id": "",
            "name": ""
          },
          "artifactSourceDefinitionUrl": {
            "id": "https://github.com/buildit/azurerig-nodejs",
            "name": ""
          }
        },
        "isRetained": false
      }
    ],
    "triggers": [
    ],
    "releaseNameFormat": "Release-$(rev:r)",
    "tags": [],
    "pipelineProcess": {
      "type": "designer"
    },
    "properties": {
      "DefinitionCreationSource": {
        "$type": "System.String",
        "$value": "ReleaseNew"
      }
    },
    "name": "${pipelineName}",
    "path": "\\"
  }
  