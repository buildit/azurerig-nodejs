{
    "isDeleted": false,
    "variables": {
      "docker.imageBase": {
        "value": "${imageName}"
      }
    },
    "variableGroups": [],
    "environments": [
      {
        "id": 1,
        "name": "Staging",
        "rank": 1,
        "owner": {
          "id": "${owner_id}"
        },
        "variables": {},
        "variableGroups": [],
        "preDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 1
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": "beforeGates"
          }
        },
        "deployStep": {
          "id": 2
        },"postDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": false,
              "isNotificationOn": false,
              "id": 3,
              "approver": {
                "id": "${owner_id}"
              }
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": true,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": "afterSuccessfulGates"
          }
        },
        "deployPhases": [
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": "none"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": "${agentQueueId}",
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 1,
            "phaseType": "agentBasedDeployment",
            "name": "Run on agent",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
                "version": "4.*",
                "name": "Azure App Service Deploy",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": { 
                },
                "condition": "succeeded()",
                "inputs": {
                  "ConnectionType": "AzureRM",
                  "ConnectedServiceName": "${serviceConnectionId}",
                  "PublishProfilePath": "$(System.DefaultWorkingDirectory)/**/*.pubxml",
                  "PublishProfilePassword": "",
                  "WebAppKind": "webAppContainer",
                  "WebAppName": "${appName}Stage",
                  "DeployToSlotOrASEFlag": "false",
                  "ResourceGroupName": "${resourceGroupName}",
                  "SlotName": "production",
                  "DockerNamespace": "${registryAddress}",
                  "DockerRepository": "${imageName}",
                  "DockerImageTag": "${imageTag}",
                  "VirtualApplication": "",
                  "Package": "$(System.DefaultWorkingDirectory)/**/*.zip",
                  "RuntimeStack": "",
                  "RuntimeStackFunction": "",
                  "StartupCommand": "",
                  "ScriptType": "",
                  "InlineScript": ":: You can provide your deployment commands here. One command per line.",
                  "ScriptPath": "",
                  "WebConfigParameters": "",
                  "AppSettings": "",
                  "ConfigurationSettings": "",
                  "UseWebDeploy": "false",
                  "DeploymentType": "webDeploy",
                  "TakeAppOfflineFlag": "true",
                  "SetParametersFile": "",
                  "RemoveAdditionalFilesFlag": "false",
                  "ExcludeFilesFromAppDataFlag": "true",
                  "AdditionalArguments": "-retryAttempts:6 -retryInterval:10000",
                  "RenameFilesFlag": "true",
                  "XmlTransformation": "false",
                  "XmlVariableSubstitution": "false",
                  "JSONFiles": ""
                }
              }
            ]
          }
        ],
        "environmentOptions": {
          "emailNotificationType": "OnlyOnFailure",
          "emailRecipients": "release.environment.owner;release.creator",
          "skipArtifactsDownload": false,
          "timeoutInMinutes": 0,
          "enableAccessToken": false,
          "publishDeploymentStatus": true,
          "badgeEnabled": false,
          "autoLinkWorkItems": false,
          "pullRequestDeploymentEnabled": false
        },
        "demands": [],
        "conditions": [
          {
            "name": "ReleaseStarted",
            "conditionType": "event",
            "value": ""
          }
        ],
        "executionPolicy": {
          "concurrencyCount": 1,
          "queueDepthCount": 0
        },
        "schedules": [],
        "retentionPolicy": {
          "daysToKeep": 30,
          "releasesToKeep": 3,
          "retainBuild": true
        },
        "processParameters": {},
        "properties": {},
        "preDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "postDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "environmentTriggers": []
        },
        {
          "id": 2,
          "name": "Production",
          "rank": 2,
          "owner": {
            "id": "${owner_id}"
          },
          "variables": {},
          "variableGroups": [],
          "preDeployApprovals": {
            "approvals": [
              {
                "rank": 1,
                "isAutomated": true,
                "isNotificationOn": false,
                "id": 1
              }
            ],
            "approvalOptions": {
              "requiredApproverCount": null,
              "releaseCreatorCanBeApprover": false,
              "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
              "enforceIdentityRevalidation": false,
              "timeoutInMinutes": 0,
              "executionOrder": "beforeGates"
            }
          },
          "deployStep": {
            "id": 3
          },"postDeployApprovals": {
            "approvals": [
              {
                "rank": 1,
                "isAutomated": true,
                "isNotificationOn": false,
                "id": 3
              }
            ],
            "approvalOptions": {
              "requiredApproverCount": null,
              "releaseCreatorCanBeApprover": false,
              "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
              "enforceIdentityRevalidation": false,
              "timeoutInMinutes": 0,
              "executionOrder": "afterSuccessfulGates"
            }
          },
          "deployPhases": [
            {
              "deploymentInput": {
                "parallelExecution": {
                  "parallelExecutionType": "none"
                },
                "skipArtifactsDownload": false,
                "artifactsDownloadInput": {
                  "downloadInputs": []
                },
                "queueId": "${agentQueueId}",
                "demands": [],
                "enableAccessToken": false,
                "timeoutInMinutes": 0,
                "jobCancelTimeoutInMinutes": 1,
                "condition": "succeeded()",
                "overrideInputs": {}
              },
              "rank": 1,
              "phaseType": "agentBasedDeployment",
              "name": "Run on agent",
              "refName": null,
              "workflowTasks": [
                {
                  "environment": {},
                  "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
                  "version": "4.*",
                  "name": "Azure App Service Deploy",
                  "refName": "",
                  "enabled": true,
                  "alwaysRun": false,
                  "continueOnError": false,
                  "timeoutInMinutes": 0,
                  "definitionType": "task",
                  "overrideInputs": { 
                  },
                  "condition": "succeeded()",
                  "inputs": {
                    "ConnectionType": "AzureRM",
                    "ConnectedServiceName": "${serviceConnectionId}",
                    "PublishProfilePath": "$(System.DefaultWorkingDirectory)/**/*.pubxml",
                    "PublishProfilePassword": "",
                    "WebAppKind": "webAppContainer",
                    "WebAppName": "${appName}Prod",
                    "DeployToSlotOrASEFlag": "false",
                    "ResourceGroupName": "${resourceGroupName}",
                    "SlotName": "production",
                    "DockerNamespace": "${registryAddress}",
                    "DockerRepository": "${imageName}",
                    "DockerImageTag": "${imageTag}",
                    "VirtualApplication": "",
                    "Package": "$(System.DefaultWorkingDirectory)/**/*.zip",
                    "RuntimeStack": "",
                    "RuntimeStackFunction": "",
                    "StartupCommand": "",
                    "ScriptType": "",
                    "InlineScript": ":: You can provide your deployment commands here. One command per line.",
                    "ScriptPath": "",
                    "WebConfigParameters": "",
                    "AppSettings": "",
                    "ConfigurationSettings": "",
                    "UseWebDeploy": "false",
                    "DeploymentType": "webDeploy",
                    "TakeAppOfflineFlag": "true",
                    "SetParametersFile": "",
                    "RemoveAdditionalFilesFlag": "false",
                    "ExcludeFilesFromAppDataFlag": "true",
                    "AdditionalArguments": "-retryAttempts:6 -retryInterval:10000",
                    "RenameFilesFlag": "true",
                    "XmlTransformation": "false",
                    "XmlVariableSubstitution": "false",
                    "JSONFiles": ""
                  }
                }
              ]
            }
          ],
          "environmentOptions": {
            "emailNotificationType": "OnlyOnFailure",
            "emailRecipients": "release.environment.owner;release.creator",
            "skipArtifactsDownload": false,
            "timeoutInMinutes": 0,
            "enableAccessToken": false,
            "publishDeploymentStatus": true,
            "badgeEnabled": false,
            "autoLinkWorkItems": false,
            "pullRequestDeploymentEnabled": false
          },
          "demands": [],
          "conditions": [
            {
              "name": "Staging",
              "conditionType": "environmentState",
              "value": "4"
            }
          ],
          "executionPolicy": {
            "concurrencyCount": 1,
            "queueDepthCount": 0
          },
          "schedules": [],
          "retentionPolicy": {
            "daysToKeep": 30,
            "releasesToKeep": 3,
            "retainBuild": true
          },
          "processParameters": {},
          "properties": {},
          "preDeploymentGates": {
            "id": 0,
            "gatesOptions": null,
            "gates": []
          },
          "postDeploymentGates": {
            "id": 0,
            "gatesOptions": null,
            "gates": []
          },
          "environmentTriggers": []
          }
  
    ],
    "artifacts": [
      {
        "sourceId": "${gitHubServiceConnectionId}:buildit/azurerig-nodejs",
        "type": "GitHub",
        "alias": "_buildit_azurerig-nodejs",
        "definitionReference": {
          "branch": {
            "id": "master",
            "name": "master"
          },
          "checkoutNestedSubmodules": {
            "id": "True",
            "name": "Any nested submodules within"
          },
          "checkoutSubmodules": {
            "id": "",
            "name": ""
          },
          "connection": {
            "id": "${gitHubServiceConnectionId}"
          },
          "defaultVersionSpecific": {
            "id": "",
            "name": ""
          },
          "defaultVersionType": {
            "id": "latestFromBranchType",
            "name": "Latest from the default branch"
          },
          "definition": {
            "id": "buildit/azurerig-nodejs",
            "name": "buildit/azurerig-nodejs"
          },
          "fetchDepth": {
            "id": "",
            "name": ""
          },
          "gitLfsSupport": {
            "id": "",
            "name": ""
          },
          "artifactSourceDefinitionUrl": {
            "id": "https://github.com/buildit/azurerig-nodejs",
            "name": ""
          }
        },
        "isRetained": false
      },
      {
        "sourceId": "${projectId}:${pipelineId}",
        "type": "Build",
        "alias": "_${pipelineName}",
        "definitionReference": {
          "defaultVersionBranch": {
            "id": "",
            "name": ""
          },
          "defaultVersionSpecific": {
            "id": "",
            "name": ""
          },
          "defaultVersionTags": {
            "id": "",
            "name": ""
          },
          "defaultVersionType": {
            "id": "latestType",
            "name": "Latest"
          },
          "definition": {
            "id": "${pipelineId}",
            "name": "${sourcePipelineName}"
          },
          "project": {
            "id": "${projectId}",
            "name": "${projectName}"
          },
          "artifactSourceDefinitionUrl": {
            "id": "https://dev.azure.com/${orgName}/_permalink/_build/index?collectionId=$(System.CollectionId)&projectId=${projectId}&definitionId=${pipelineId}",
            "name": ""
          }
        },
        "isPrimary": true,
        "isRetained": false
      }
    ],
    "triggers": [
      {
        "artifactAlias": "${sourcePipelineName}",
        "triggerConditions": [],
        "triggerType": "artifactSource"
      }
    ],
    "releaseNameFormat": "Release-$(rev:r)",
    "tags": [],
    "pipelineProcess": {
      "type": "designer"
    },
    "properties": {
      "DefinitionCreationSource": {
        "$type": "System.String",
        "$value": "ReleaseNew"
      }
    },
    "name": "${pipelineName}",
    "path": "\\"
  }