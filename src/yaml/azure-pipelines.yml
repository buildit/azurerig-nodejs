# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables: 
  docker.imageBase:
    value: "${imageName}"
  docker.imageTag:
    value: unstable-$(Build.BuildId)
  storageAccount.key:
    value: "STORAGE_ACCOUNT_KEY"
  storageAccount.name:
    value: "STORAGE_ACCOUNT_NAME"
  storageAccount.url:
    value: "STORAGE_ACCOUNT_URL"
  storageAccount.containerName:
    value: "STORAGE_ACCOUNT_CONTAINER_NAME"

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: Docker@1
  displayName: 'Build an image'
  inputs:
    azureSubscriptionEndpoint: 'Azure Service Connection-X5VDfi'
    azureContainerRegistry: builditslackbotacr.azurecr.io
    dockerFile: Dockerfile
    arguments: '--no-cache --build-arg STORAGE_ACCT_URL="$(storageAccount.url)" --build-arg STORAGE_ACCT_KEY="$(storageAccount.key)" --build-arg BUILD_NUMBER="$(Build.BuildNumber)" '
    imageName: '$(docker.imageBase):stable-$(Build.BuildId)'
- task: Docker@1
  displayName: 'Tag image'
  inputs:
    azureSubscriptionEndpoint: 'Azure Service Connection-X5VDfi'
    azureContainerRegistry: builditslackbotacr.azurecr.io
    command: 'Tag image'
    arguments: 'builditslackbotacr.azurecr.io/$(docker.imageBase):stable-latest'
    imageName: 'builditslackbotacr.azurecr.io/$(docker.imageBase):stable-$(Build.BuildId)'
- task: AzureCLI@1
  displayName: 'Download Test Report'
  inputs:
    azureSubscription: '${subscription}'
    scriptLocation: inlineScript
    inlineScript: |
     export AZURE_STORAGE_ACCOUNT=$1
     export AZURE_STORAGE_KEY=$2
     export CONTAINER_NAME=$3
     export BUILD_NUMBER=$4
     export WORKING_DIRECTORY=$5
     
     export container_name=${CONTAINER_NAME}
     export blob_name="TestReport_${BUILD_NUMBER}.xml"
     export destination_file=${WORKING_DIRECTORY}/TestReport.xml
     
     echo "Downloading the file..."
     az storage blob download --account-name $1 --account-key $2 --container-name $container_name --name $blob_name --file $destination_file --output table
    arguments: '$(storageAccount.name) $(storageAccount.key) $(storageAccount.containerName) $(Build.BuildNumber) $(System.DefaultWorkingDirectory)'
- task: PublishTestResults@2
  displayName: 'Publish Test Results TestReport.xml'
  inputs:
    testResultsFiles: TestReport.xml
    failTaskOnFailedTests: true
    steps:
- task: Docker@1
  displayName: 'Push an image'
  inputs:
    azureSubscriptionEndpoint: 'Azure Service Connection-X5VDfi'
    azureContainerRegistry: builditslackbotacr.azurecr.io
    command: 'Push an image'
    imageName: '$(docker.imageBase):stable-$(Build.BuildId)'
- task: Docker@1
  displayName: 'Push an image'
  inputs:
    azureSubscriptionEndpoint: 'Azure Service Connection-X5VDfi'
    azureContainerRegistry: builditslackbotacr.azurecr.io
    command: 'Push an image'
    imageName: '$(docker.imageBase):stable-latest'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Source Code'
  inputs:
    PathtoPublish: .
    ArtifactName: 'Source Code'
